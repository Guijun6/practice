//题目描述
//输入两个单调递增的链表，输出两个链表合成后的链表，当然我们需要合成后的链表满足单调不减规则。

/*
struct ListNode {
	int val;
	struct ListNode *next;
	ListNode(int x) :
			val(x), next(NULL) {
	}
};*/
class Solution {
public:
    ListNode* Merge(ListNode* pHead1, ListNode* pHead2)
    {
        if(pHead1 == NULL)
            return pHead2;
        if(pHead2 == NULL)
            return pHead1;
        ListNode* retList = NULL;
        //先处理一个节点
        if(pHead1->val <= pHead2->val) {
            retList = pHead1;
            pHead1 = pHead1->next;
        } else {
            retList = pHead2;
            pHead2 = pHead2->next;
        }
        //开始接下来的遍历
        ListNode* tmp = retList;
        while(pHead1 != NULL && pHead2 != NULL) {
            if(pHead1->val <= pHead2->val) {
                tmp->next = pHead1;
                pHead1 = pHead1->next;
            } else {
                tmp->next = pHead2;
                pHead2 = pHead2->next;
            }
            tmp = tmp->next;
        }
        if(pHead1 == NULL) {
            tmp->next = pHead2;
        } else {
            tmp->next = pHead1;
        }
        return retList;
    }
};
