题目描述
输入一个复杂链表（每个节点中有节点值，以及两个指针，一个指向下一个节点，另一个特殊指针指向任意一个节点），
返回结果为复制后复杂链表的head。（注意，输出结果中请不要返回参数中的节点引用，否则判题程序会直接返回空）

/*
struct RandomListNode {
    int label;
    struct RandomListNode *next, *random;
    RandomListNode(int x) :
            label(x), next(NULL), random(NULL) {
    }
};
*/
class Solution {
public:
    RandomListNode* Clone(RandomListNode* pHead)
    {
        if(pHead == NULL)
            return NULL;

        RandomListNode* p1 = pHead;
        while(p1) {
            RandomListNode* newNode = new RandomListNode(p1->label);
            newNode->next = p1->next;
            p1->next = newNode;
            p1 = newNode->next;
        }
        //修改random
        p1 = pHead;
        while(p1) {
            if(p1->random)
                p1->next->random = p1->random->next;
            p1 = p1->next->next;
        }
        //拆成两个链表
        //A->A'->B->B'->C->C'
        RandomListNode* retListHead = pHead->next;
        RandomListNode* p2 = retListHead;
        p1 = pHead;
        while(p1) {
            p1->next = p1->next->next;
            if(p2->next != NULL)
                p2->next = p2->next->next;
            p2 = p2->next;
            p1 = p1->next;
        }
        return retListHead;
    }
};
