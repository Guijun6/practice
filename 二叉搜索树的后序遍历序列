题目描述
输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历的结果。如果是则输出Yes,否则输出No。假设输入的数组的任意两个数字都互不相同。
//BST的后序序列的合法序列是，对于一个序列S，最后一个元素是x （也就是根），
//如果去掉最后一个元素的序列为T，那么T满足：T可以分成两段，
//前一段（左子树）小于x，后一段（右子树）大于x，且这两段（子树）都是合法的后序序列。完美的递归定义 : ) 。

class Solution {
public:
    bool VerifySquenceOfBST(vector<int> sequence) {
        if(sequence.size() == 0)
            return false;
        return check(sequence, 0, sequence.size()-1);
    }
    bool check(vector<int> a, int left, int right) {
        if(left >= right) {
            return true;
        }
        int mid = 0;
        while(a[mid++] < a[right]);
        //判断mid右边的都要比a[right]大，
        for(int i = right-1; i >= mid; i--) {
            if(a[i] < a[right]) 
                return false;
        }
        return check(a,left,right-1);
    }
};
